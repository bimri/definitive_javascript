Operators can be categorized based on the number of operands they expect (their
arity). 

Most JavaScript operators, like the * multiplication operator, are binary operators
that combine two expressions into a single, more complex expression. That is,
they expect two operands. 

JavaScript also supports a number of unary operators,
which convert a single expression into a single, more complex expression. The −
operator in the expression −x is a unary operator that performs the operation of negation
on the operand x. 

Finally, JavaScript supports one ternary operator, the conditional
operator ?:, which combines three expressions into a single expression.
